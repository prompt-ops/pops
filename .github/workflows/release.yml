name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache: false

      - name: Install dependencies
        run: go mod tidy

      - name: Create dist directory
        run: mkdir -p dist

      - name: Build binaries
        run: |
          echo "Building for GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 GO111MODULE=on \
          go build -ldflags="-s -w" -o dist/pops-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Rename Windows binaries with .exe
        if: matrix.goos == 'windows'
        run: mv dist/pops-windows-${{ matrix.goarch }} dist/pops-windows-${{ matrix.goarch }}.exe

      - name: Validate binary
        run: |
          file dist/pops-${{ matrix.goos }}-${{ matrix.goarch }}*

      - name: Upload binaries as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pops-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release
          pattern: pops-*

      - name: List release folder
        run: ls -R release

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: prompt-ops/pops
          files: release/*
          draft: false
          prerelease: false
